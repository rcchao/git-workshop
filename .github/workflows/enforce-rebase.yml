name: Enforce Rebase

on:
  workflow_dispatch:
    inputs:
      pr_sha:
        description: 'SHA of the pull request head commit'
        required: true
        type: string
  pull_request:
    branches: [main]

jobs:
  check-rebase:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Debug SHA values
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Input SHA (pr_sha): ${{ github.event.inputs.pr_sha }}"
          echo "Checked out commit SHA: $(git rev-parse HEAD)"
          echo "Head Commit SHA: ${{ github.event.pull_request.head.sha }}"

      - name: Check merge base
        id: rebase_check
        run: |
          git fetch origin main
          MERGE_BASE=$(git merge-base HEAD origin/main)
          LATEST_MAIN=$(git rev-parse origin/main)
          echo "MERGE_BASE: $MERGE_BASE"
          echo "LATEST_MAIN: $LATEST_MAIN"

          # Ensure PR branch is directly on top of main
          if [ "$MERGE_BASE" != "$LATEST_MAIN" ]; then
            echo "Branch is not rebased on latest main. Run git fetch, git rebase origin/main and then resolve any/all merge conflicts with the Merge Editor. Continue the rebase with git rebase --continue until your rebase has completed successfully. Finish with git push --force to rebase."
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi

      - name: Set PR status to success
        if: github.event_name == 'workflow_dispatch' && steps.rebase_check.outputs.status == 'success'
        uses: actions/github-script@v6
        env:
          PR_SHA: ${{ github.event.inputs.pr_sha }}
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: process.env.PR_SHA,
              state: 'success',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions`,
              description: 'Branch is rebased on latest main.',
              context: 'Manual Check'
            });

      - name: Set PR status to failure
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v6
        env:
          PR_SHA: ${{ github.event.inputs.pr_sha }}
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: process.env.PR_SHA,
              state: 'failure',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions`,
              description: 'Branch is not rebased on latest main.',
              context: 'Manual Check'
            });
